#
# Copyright(c) 2008 Imagination Technologies Ltd. All rights reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2, as published by the Free Software Foundation.
# 
# This program is distributed in the hope it will be useful but, except 
# as otherwise stated in writing, without any warranty; without even the 
# implied warranty of merchantability or fitness for a particular purpose. 
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
# 
# The full GNU General Public License is included in this distribution in
# the file called "COPYING".
#
# Contact Information:
# Imagination Technologies Ltd. <gpl-support@imgtec.com>
# Home Park Estate, Kings Langley, Herts, WD4 8LZ, UK 
# 
#
#

PWD	:= $(shell pwd)

export

KBUILD_MODULE := $(MODULE).$(KM_SUFFIX)
KBUILD_SYSBIN := $(SYSBIN)

KBUILD_DIRS	:= $(dir $(SOURCES))

ifneq ("$(SYM_VERS_DEPS)", "")
KBUILD_SYM_VERS := $(SYM_VERS_DEPS)/kbuild/Module.symvers
KBUILD_COPY_SYM_VERS := symvers
endif

# The version file is useful.  It should only be created when it doesn't
# exist.  We use the .INTERMEDIATE rule here to signify we want to rebuild
# PVRVERSION_H if EURASIACON_PJ changes but not to worry about EURASIACON_PJ
# if it's not there.
#
# DON'T CHANGE THIS unless you REALLY do know what you're doing!
#
.INTERMEDIATE: $(EURASIACON_PJ)

$(PVRVERSION_H): $(EURASIACON_PJ)
	@if [ ! -f "$(EURASIACON_PJ)" ]; then \
		echo; \
		echo "** Both $$EURASIAROOT/include/pvrversion.h and eurasiacon.pj missing."; \
		echo "** Your tree is not intact.  Cannot continue."; \
		echo; \
		exit 1; \
	fi
	$(SILENT)$(RM) $@
	$(SILENT)$(PERL) $(EURASIAROOT)/eurasiacon/build/scripts/create_pvrversion.pl \
						-i $(EURASIACON_PJ)	$@
	$(ECHO) " Updated pvrversion.h"

.PHONY: symvers
symvers: 
	@if [ -f "$(KBUILD_SYM_VERS)" ]; then \
		cp -f $(KBUILD_SYM_VERS) $(PWD) ;\
	fi

.PHONY: modules
modules: $(PVRVERSION_H) $(KBUILD_COPY_SYM_VERS)
	$(SILENT)$(MAKE) -C $(KERNELDIR) M=$(PWD) modules

.PHONY: install
install:
	$(SILENT)$(MAKE) INSTALL_MOD_PATH=$(DISCIMAGE) INSTALL_MOD_DIR=kernel/drivers/char -C $(KERNELDIR) M=$(PWD) modules_install

.PHONY: clean
clean:
	$(SILENT)$(MAKE) -C $(KERNELDIR) M=$(PWD) clean
	$(SILENT)$(RM) $(KBUILD_SYSBIN)/$(KBUILD_MODULE)
	$(SILENT)$(RM) $(SOURCES:.c=.o)
	$(SILENT)$(RM) $(addsuffix .*.o.cmd, $(dir $(SOURCES)))
	$(SILENT)$(RM) $(PWD)/Module.symvers

.PHONY: clobber
clobber: clean
	$(SILENT)$(RM) -r $(KBUILD_SYSBIN)

.PHONY: help
help:
	$(SILENT)$(MAKE) -C $(KERNELDIR) M=$(PWD) help

.PHONY: all
all:  $(KBUILD_SYSBIN)/$(KBUILD_MODULE)

$(KBUILD_SYSBIN)/$(KBUILD_MODULE): modules $(KBUILD_SYSBIN)
	$(ECHO) " Copying $(KBUILD_MODULE) to $(KBUILD_SYSBIN)"
	$(SILENT)$(CP) $(KBUILD_MODULE) $(KBUILD_SYSBIN)

$(KBUILD_SYSBIN):
	$(SILENT)$(MKDIR) $(KBUILD_SYSBIN)

.PHONY: package
package: all
ifeq ("$(BUILD)", "release")
	$(ECHO) " DDK-packaging $(MODULE) "
	$(SILENT)$(STRIP) --strip-unneeded $(KBUILD_MODULE)
	$(SILENT)$(STRIP) --strip-unneeded $(KBUILD_SYSBIN)/$(KBUILD_MODULE)
endif #ifeq ("$(BUILD)", "release")

.PHONY: symbolpackage
symbolpackage: package





