---
 drivers/cpufreq/cpufreq_conservative.c |    4 ++--
 drivers/cpufreq/cpufreq_ondemand.c     |    8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

Index: linux-3.0.0-ck1/drivers/cpufreq/cpufreq_ondemand.c
===================================================================
--- linux-3.0.0-ck1.orig/drivers/cpufreq/cpufreq_ondemand.c	2011-08-11 12:41:05.594183573 +1000
+++ linux-3.0.0-ck1/drivers/cpufreq/cpufreq_ondemand.c	2011-08-11 12:44:14.020183568 +1000
@@ -28,8 +28,8 @@
  * It helps to keep variable names smaller, simpler
  */
 
-#define DEF_FREQUENCY_DOWN_DIFFERENTIAL		(10)
-#define DEF_FREQUENCY_UP_THRESHOLD		(80)
+#define DEF_FREQUENCY_DOWN_DIFFERENTIAL		(26)
+#define DEF_FREQUENCY_UP_THRESHOLD		(63)
 #define DEF_SAMPLING_DOWN_FACTOR		(1)
 #define MAX_SAMPLING_DOWN_FACTOR		(100000)
 #define MICRO_FREQUENCY_DOWN_DIFFERENTIAL	(3)
@@ -415,10 +415,10 @@ static void dbs_check_cpu(struct cpu_dbs
 
 	/*
 	 * Every sampling_rate, we check, if current idle time is less
-	 * than 20% (default), then we try to increase frequency
+	 * than 37% (default), then we try to increase frequency
 	 * Every sampling_rate, we look for a the lowest
 	 * frequency which can sustain the load while keeping idle time over
-	 * 30%. If such a frequency exist, we try to decrease to this frequency.
+	 * 63%. If such a frequency exist, we try to decrease to this frequency.
 	 *
 	 * Any frequency increase takes it to the maximum frequency.
 	 * Frequency reduction happens at minimum steps of
Index: linux-3.0.0-ck1/drivers/cpufreq/cpufreq_conservative.c
===================================================================
--- linux-3.0.0-ck1.orig/drivers/cpufreq/cpufreq_conservative.c	2011-08-11 12:41:05.583183573 +1000
+++ linux-3.0.0-ck1/drivers/cpufreq/cpufreq_conservative.c	2011-08-11 12:44:14.020183568 +1000
@@ -29,8 +29,8 @@
  * It helps to keep variable names smaller, simpler
  */
 
-#define DEF_FREQUENCY_UP_THRESHOLD		(80)
-#define DEF_FREQUENCY_DOWN_THRESHOLD		(20)
+#define DEF_FREQUENCY_UP_THRESHOLD		(63)
+#define DEF_FREQUENCY_DOWN_THRESHOLD		(26)
 
 /*
  * The polling frequency of this governor depends on the capability of
